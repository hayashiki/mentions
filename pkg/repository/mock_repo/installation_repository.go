// Code generated by MockGen. DO NOT EDIT.
// Source: installation_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/hayashiki/mentions/pkg/model"
	reflect "reflect"
)

// MockInstallationRepository is a mock of InstallationRepository interface
type MockInstallationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockInstallationRepositoryMockRecorder
}

// MockInstallationRepositoryMockRecorder is the mock recorder for MockInstallationRepository
type MockInstallationRepositoryMockRecorder struct {
	mock *MockInstallationRepository
}

// NewMockInstallationRepository creates a new mock instance
func NewMockInstallationRepository(ctrl *gomock.Controller) *MockInstallationRepository {
	mock := &MockInstallationRepository{ctrl: ctrl}
	mock.recorder = &MockInstallationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInstallationRepository) EXPECT() *MockInstallationRepositoryMockRecorder {
	return m.recorder
}

// Put mocks base method
func (m *MockInstallationRepository) Put(ctx context.Context, installation *model.Installation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", ctx, installation)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put
func (mr *MockInstallationRepositoryMockRecorder) Put(ctx, installation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockInstallationRepository)(nil).Put), ctx, installation)
}

// Get mocks base method
func (m *MockInstallationRepository) Get(ctx context.Context, id int64) (*model.Installation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*model.Installation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockInstallationRepositoryMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockInstallationRepository)(nil).Get), ctx, id)
}
